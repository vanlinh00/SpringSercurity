package com.example.SpringSecurity.service;

import com.example.SpringSecurity.entity.LocationRequest;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

@Service
public class LocationService {

//    ‚úÖ 1. Overloading vs Overriding
//    Overloading: nhi·ªÅu method c√πng t√™n kh√°c tham s·ªë ‚Äì d√πng trong LocationService.

    // Overloaded method: l∆∞u theo userId
    public void saveLocation(Long userId, double latitude, double longitude) {
        // save to DB
    }

    // Overloaded method: l∆∞u theo DTO
//    public void saveLocation(LocationRequestDTO dto) {
//        saveLocation(dto.getUserId(), dto.getLatitude(), dto.getLongitude());
//    }


    @Async
    public void processLocationAsync(LocationRequest request) {
        // 1. Ghi v√†o DB
        saveLocationToDB(request);

        // 2. Ki·ªÉm tra v√πng an to√†n
        boolean isOutOfSafeZone = !isInSafeZone(request);
        if (isOutOfSafeZone) {
            // 3. G·ª≠i c·∫£nh b√°o t·ªõi ng∆∞·ªùi th√¢n
            sendAlertToRelatives(request);
        }

        // 4. L∆∞u log
        logLocationActivity(request);
    }

    private void saveLocationToDB(LocationRequest r) {
        // TODO: save r to DB
        System.out.println("üìù L∆∞u v√†o DB: " + r);
    }

    private boolean isInSafeZone(LocationRequest r) {
        // TODO: logic ki·ªÉm tra v√πng an to√†n
        return Math.random() > 0.3; // gi·∫£ l·∫≠p
    }

    private void sendAlertToRelatives(LocationRequest r) {
        // TODO: g·ª≠i notification, email, SMS, push...
        System.out.println("üö® C·∫£nh b√°o ra kh·ªèi v√πng an to√†n: " + r);
    }

    private void logLocationActivity(LocationRequest r) {
        // TODO: l∆∞u log l·∫°i DB ho·∫∑c file
        System.out.println("üìú Ghi log v·ªã tr√≠: " + r);
    }
}
